{"ast":null,"code":"var __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport React, { Component, Fragment } from 'react';\nimport { Query } from 'react-apollo';\nimport { Card } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\nquery getNotes($endNumOrders: Int, $cursor: String)\n{\n  orders(first: $endNumOrders, after: $cursor) {\n      edges\t{\n        node\t{\n          name\n          note\n                  }\n          }\n  }\n}\n`;\nconst GET_START_CURSOR = gql`\nquery getNotes($numOrders: Int)\n{\n  orders(first: $numOrders) {\n      edges\t{\n        cursor\n        node {\n          name\n          note\n        }\n          }\n  }\n}\n`;\nconst GET_START_INFO = gql`\nquery\n{\n  orders(first: 1) {\n      edges\t{\n        cursor\n        node {\n          name\n          note\n        }\n          }\n  }\n}\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    //*important! Where cursor data of the start index is stored\n    var cursorData = '';\n    var firstNote = '';\n    var firstName = '';\n    return __jsx(\"div\", null, __jsx(Query, {\n      query: GET_START_INFO,\n      variables: {}\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      const startRangeInt = parseInt(store.get('startRangeInt'), 10);\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n      if (error) return __jsx(\"div\", null, error.message);\n\n      if (startRangeInt == 0) {\n        console.log(data);\n        cursorData = data.orders.edges[0].cursor;\n        firstName = data.orders.edges[0].node.name;\n        firstNote = data.orders.edges[0].node.note;\n        console.log(cursorData);\n        store.set('cursorInfo', cursorData.toString());\n      }\n\n      return __jsx(Card, null);\n    }), __jsx(Query, {\n      query: GET_START_CURSOR,\n      variables: {\n        numOrders: parseInt(store.get('startRangeInt'), 10)\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      const startRangeInt = parseInt(store.get('startRangeInt'), 10);\n      console.log(startRangeInt);\n      console.log(data);\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n      if (error) return __jsx(\"div\", null, error.message); //startRangeInt - 1 if startRangeInt is 1 will be 0. The first index\n      //startRangeInt cannot be equal to 0\n\n      if (startRangeInt != 0) {\n        cursorData = data.orders.edges[startRangeInt - 1].cursor;\n        console.log(cursorData);\n        console.log(data.orders.edges[startRangeInt - 1].node.name);\n        store.set('cursorInfo', cursorData.toString());\n      } else {\n        console.log(\"start range entered was 0. Will add first order on top of desired number of orders to process\");\n      }\n\n      return __jsx(Card, null);\n    }), __jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        endNumOrders: parseInt(store.get('endRangeInt'), 10),\n        cursor: store.get('cursorInfo')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      var endNumOrder = parseInt(store.get('endRangeInt'), 10);\n      var contents = [];\n      console.log(data);\n      var i = 0;\n      const startRangeInt = store.get('startRangeInt');\n\n      if (startRangeInt == 0) {\n        contents.push(firstNote);\n        contents.push(firstName);\n      }\n\n      function loop(i) {\n        if (i < endNumOrder) {\n          //push first element of data onto contents\n          //\n          if (data.orders.edges[i].node.note == '') {\n            console.log('*empty*');\n          } else {\n            console.log(data.orders.edges[i].node.note);\n          }\n\n          contents.push(data.orders.edges[i].node.note);\n          contents.push(data.orders.edges[i].node.name);\n          loop(i + 1);\n        } else {\n          console.log('Finished Reading!');\n        }\n\n        store.set('contents', contents);\n      }\n\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\"); //console.log(store.get('endRangeInt'))\n\n      console.log('Number of orders to go to: ' + endNumOrder);\n      if (error) return __jsx(\"div\", null, error.message);\n      loop(i);\n      console.log(contents); //console.log(data);\n\n      return __jsx(Card, null);\n    }));\n  }\n\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["C:/Users/erica/Documents/College4Sq/Notes-From-Orders-Shopify-App/components/ResourceList.js"],"names":["gql","React","Component","Fragment","Query","Card","store","GET_PRODUCTS_BY_ID","GET_START_CURSOR","GET_START_INFO","ResourceListWithProducts","render","cursorData","firstNote","firstName","data","loading","error","startRangeInt","parseInt","get","message","console","log","orders","edges","cursor","node","name","note","set","toString","numOrders","endNumOrders","endNumOrder","contents","i","push","loop"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport React, {Component, Fragment} from 'react'\r\nimport { Query } from 'react-apollo';\r\nimport { Card } from '@shopify/polaris';\r\nimport store from 'store-js';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\nquery getNotes($endNumOrders: Int, $cursor: String)\r\n{\r\n  orders(first: $endNumOrders, after: $cursor) {\r\n      edges\t{\r\n        node\t{\r\n          name\r\n          note\r\n                  }\r\n          }\r\n  }\r\n}\r\n`;\r\n\r\nconst GET_START_CURSOR = gql`\r\nquery getNotes($numOrders: Int)\r\n{\r\n  orders(first: $numOrders) {\r\n      edges\t{\r\n        cursor\r\n        node {\r\n          name\r\n          note\r\n        }\r\n          }\r\n  }\r\n}\r\n`;\r\n\r\nconst GET_START_INFO = gql`\r\nquery\r\n{\r\n  orders(first: 1) {\r\n      edges\t{\r\n        cursor\r\n        node {\r\n          name\r\n          note\r\n        }\r\n          }\r\n  }\r\n}\r\n`;\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n  render() {\r\n    //*important! Where cursor data of the start index is stored\r\n    var cursorData = '';\r\n    var firstNote = ''\r\n    var firstName = ''\r\n\r\n    return (\r\n  <div>\r\n      <Query query={GET_START_INFO} variables={{}}>\r\n      {({ data, loading, error }) => {\r\n        const startRangeInt = parseInt(store.get('startRangeInt'), 10)\r\n        if (loading) return <div>Loading…</div>;\r\n        if (error) return <div>{error.message}</div>;\r\n        if(startRangeInt == 0)\r\n        {\r\n          console.log(data)\r\n          cursorData = data.orders.edges[0].cursor\r\n          firstName = data.orders.edges[0].node.name\r\n          firstNote = data.orders.edges[0].node.note\r\n          console.log(cursorData)\r\n          store.set('cursorInfo', cursorData.toString())\r\n        }\r\n        return (\r\n          <Card>\r\n          </Card>\r\n        );\r\n      }}\r\n    </Query>\r\n      <Query query={GET_START_CURSOR} variables={{numOrders: parseInt(store.get('startRangeInt'), 10)}}>\r\n      {({ data, loading, error }) => {\r\n        const startRangeInt = parseInt(store.get('startRangeInt'), 10)\r\n        console.log(startRangeInt)\r\n        console.log(data)\r\n        if (loading) return <div>Loading…</div>;\r\n        if (error) return <div>{error.message}</div>;\r\n        //startRangeInt - 1 if startRangeInt is 1 will be 0. The first index\r\n        //startRangeInt cannot be equal to 0\r\n        if(startRangeInt != 0)\r\n        {\r\n          cursorData = data.orders.edges[startRangeInt - 1].cursor\r\n          console.log(cursorData)\r\n          console.log(data.orders.edges[startRangeInt - 1].node.name)\r\n          store.set('cursorInfo', cursorData.toString())\r\n        }\r\n        else\r\n        {\r\n          console.log(\"start range entered was 0. Will add first order on top of desired number of orders to process\")\r\n        }\r\n        return (\r\n          <Card>\r\n          </Card>\r\n        );\r\n      }}\r\n    </Query>\r\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ endNumOrders: parseInt(store.get('endRangeInt'), 10) , cursor: store.get('cursorInfo') }}>\r\n        {({ data, loading, error }) => {\r\n          var endNumOrder = parseInt(store.get('endRangeInt'), 10)\r\n          var contents = [];\r\n          console.log(data)\r\n          var i = 0\r\n          const startRangeInt = store.get('startRangeInt')\r\n          \r\n          if(startRangeInt == 0)\r\n          {\r\n            contents.push(firstNote)\r\n            contents.push(firstName)\r\n          }\r\n\r\n          function loop(i) {\r\n            if(i < (endNumOrder)){\r\n              //push first element of data onto contents\r\n              //\r\n              if(data.orders.edges[i].node.note == '')\r\n              {\r\n                console.log('*empty*')\r\n              } else {\r\n                console.log(data.orders.edges[i].node.note)\r\n              }\r\n              contents.push(data.orders.edges[i].node.note)\r\n              contents.push(data.orders.edges[i].node.name)\r\n              loop(i + 1)\r\n            } else {\r\n              console.log('Finished Reading!');\r\n            }\r\n            store.set('contents', contents)\r\n          }\r\n\r\n          if (loading) return <div>Loading…</div>;\r\n          //console.log(store.get('endRangeInt'))\r\n          console.log('Number of orders to go to: ' + endNumOrder);\r\n          if (error) return <div>{error.message}</div>;\r\n          loop(i)\r\n          console.log(contents)\r\n          //console.log(data);\r\n          return (\r\n            <Card>\r\n\r\n            </Card>\r\n          );\r\n        }}\r\n      </Query>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n export default ResourceListWithProducts;\r\n"]},"metadata":{},"sourceType":"module"}